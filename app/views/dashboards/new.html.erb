<div class="container-fluid">
    <div class="row pt-4">
        <div class="col-2">
            <%= form_with  url: dashboards_read_file_path, method: :post, html: { multipart: true } do |f| %>
                <div class="card p-3" style="width: 18rem;">
                    <%= image_tag "rover.jpg", class: "card-img-top" %>
                    <div class="card-body">
                        <h5 class="card-title">Explore Marte</h5>
                        <p class="card-text">Crie seus comandos com arquivo txt e faça upload. Acompanhe a exploraçã pelo gráfico</p>
                        <div class="row">
                            <%= f.file_field :import_file, class: "btn btn-dark" %>
                        </div>
                        <div class="row mt-2">
                            <%= f.submit %>
                        </div>
                    </div>
                </div>
            <% end %>
        </div>
    
        <div class="col-8">
            <div class="card text-white m-2" style="background-color: rgba(255, 159, 0, 0.09); ">
                <div class="card-header">Movimentação dos Rovers</div>
                <div class="card-body">
                    <h5 class="card-title">Platô</h5>
                    <div id="chart_div" class="m-5" style="background-color: rgba(255, 159, 0, 0.5); width: auto; height: auto;"></div>
                    <div id="log" >
                        <p class="card-text" >Logs das rotas.</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-2 p-2" style="background-color: rgba(255, 159, 0, 0.5); max-height: 17rem; max-width: 17rem; border-radius: 100%;">
            <%= image_tag "navigation.png", class:'img-fluid', alt:'ícone de loja' %>
        </div>
    
    </div>
</div>
<script type="text/javascript">
    build_charts();

    var main_array = []

    function build_charts() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
                var res = JSON.parse(this.response);
                var divLog = document.getElementById('log');

                res.routes.forEach(function (route) {
                    main_array.push(['X', 'Y'])

                    route.forEach(element => { 
                        main_array.push([element.x, element.y])
                        var newContent = document.createTextNode("Log => "+"Rover id: "+ element.rover_id +"  "+"(  X: "+element.x+", "+"y: "+ element.y+", "+ "Orientation: "+ element.orientation+"  )" );
                        const lineBreak = document.createElement('br');
                        divLog.appendChild(lineBreak);
                        divLog.appendChild(newContent);
                    });
                    const lineBreak = document.createElement('br');
                    divLog.appendChild(lineBreak);                        
                });

                google.charts.load('current', {'packages':['corechart']});
                google.charts.setOnLoadCallback(drawChart);


                function drawChart() {
                    var data = google.visualization.arrayToDataTable(
                        main_array
                    );
                    var options = {
                        title: '',
                        hAxis: {title: 'X', minValue: 0, maxValue: 5},
                        vAxis: {title: 'Y', minValue: 0, maxValue: 5},
                        legend: 'none',
                        backgroundColor: 'none'
                    };

                    var draw_chart = new google.visualization.ScatterChart(document.getElementById("chart_div"));
                    draw_chart.draw(data, options);
                    draw_chart.innerText = '';
                }
            }
        };
        xhttp.open("GET", "charts_ajax", true);
        xhttp.send();
    }

</script>